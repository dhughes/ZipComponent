<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>Table of Contents</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:Arial;}
h1
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:Arial;
	font-weight:bold;}
h2
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:Arial;
	font-weight:bold;
	font-style:italic;}
h3
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-weight:normal;
	text-decoration:underline;}
h4
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:Arial;
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:.25in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:Arial;
	text-transform:uppercase;
	font-weight:bold;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:Arial;
	font-weight:bold;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:12.0pt;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:Arial;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0in;
	margin-bottom:.0001pt;
	background:navy;
	font-size:10.0pt;
	font-family:Tahoma;}
p
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
span.Heading4CharCharChar
	{font-family:Arial;
	font-weight:bold;}
span.HTMLCode-NoIndent
	{font-family:"Courier New";
	color:olive;}
span.ParameterNames
	{color:blue;}
span.CharChar
	{font-family:Arial;
	font-weight:bold;}
@page Section1
	{size:8.5in 11.0in;
	margin:.75in 1.25in .75in 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=Section1>

<h1><a name="_Toc121491973"></a><a name="_Toc73922315"></a><a
name="_Toc73777291"></a><a name="_Toc73592501"></a><a name="_Toc73229328"></a><a
name="_Toc72854008"></a><a name="_Toc72853599">Table of Contents</a><a
name="_Toc72854009"></a><a name="_Toc72853600"></a></h1>

<p class=MsoToc1><a name="_Toc73922316"></a><a name="_Toc73777292"></a><a
name="_Toc73592502"></a><a name="_Toc73229329"></a><a
href="#_Toc121491973">Table of Contents<span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></p>

<p class=MsoToc1><a href="#_Toc121491974">Introduction<span style='color:windowtext;
display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></p>

<p class=MsoToc2><a href="#_Toc121491975">Conventions Used In This Document:<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></p>

<p class=MsoToc1><a href="#_Toc121491976">About the Alagad Zip Component<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></p>

<p class=MsoToc2><a href="#_Toc121491977">Requirements to Use the Zip Component<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></p>

<p class=MsoToc1><a href="#_Toc121491978">Limitations of the Zip Component<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></p>

<p class=MsoToc2><a href="#_Toc121491979">Password Protected Zip Files<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></p>

<p class=MsoToc2><a href="#_Toc121491980">Not That Fast…<span style='color:
windowtext;display:none;text-decoration:none'>.. </span><span style='color:windowtext;display:none;text-decoration:none'>4</span></a></p>

<p class=MsoToc1><a href="#_Toc121491981">Using the Zip Component on Shared
Hosting<span style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></p>

<p class=MsoToc1><a href="#_Toc121491982">Installation of the Zip Component<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></p>

<p class=MsoToc1><a href="#_Toc121491983">Zip Component Licensing and License
Keys<span style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></p>

<p class=MsoToc1><a href="#_Toc121491984">Instantiating the Zip Component<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></p>

<p class=MsoToc2><a href="#_Toc121491985">Instantiation from a Local Directory<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></p>

<p class=MsoToc3><a href="#_Toc121491986">Using &lt;cfobject&gt;:<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></p>

<p class=MsoToc3><a href="#_Toc121491987">Using CreateObject():<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></p>

<p class=MsoToc2><a href="#_Toc121491988">Instantiation from a Mapped Directory<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc3><a href="#_Toc121491989">Using &lt;cfobject&gt;:<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc3><a href="#_Toc121491990">Using CreateObject():<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc2><a href="#_Toc121491991">Instantiation from a Custom Tag Path<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc3><a href="#_Toc121491992">Using &lt;cfobject&gt;:<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc3><a href="#_Toc121491993">Using CreateObject():<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc1><a href="#_Toc121491994">Instantiating the Zip Component with
Your License Key<span style='color:windowtext;display:none;text-decoration:
none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></p>

<p class=MsoToc2><a href="#_Toc121491995">Example<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></p>

<p class=MsoToc3><a href="#_Toc121491996">Using &lt;cfobject&gt;:<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></p>

<p class=MsoToc3><a href="#_Toc121491997">Using CreateObject():<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></p>

<p class=MsoToc1><a href="#_Toc121491998">Using the Instantiated Zip Component<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></p>

<p class=MsoToc2><a href="#_Toc121491999">Creating a New Zip and Adding a File<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc3><a href="#_Toc121492000">Source Code<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc2><a href="#_Toc121492001">Add a Directory to an existing Zip<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc3><a href="#_Toc121492002">Source Code<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc2><a href="#_Toc121492003">Extracting a File from a Zip<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc3><a href="#_Toc121492004">Source Code<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc2><a href="#_Toc121492005">Read and Write data directly to a Zip<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc3><a href="#_Toc121492006">Source Code<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc1><a href="#_Toc121492007">Working With Zip Entry Paths<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></p>

<p class=MsoToc1><a href="#_Toc121492008">Working With File System Paths<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></p>

<p class=MsoToc1><a href="#_Toc121492009">Zip Component Methods<span
style='color:windowtext;display:none;text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></p>

<p class=MsoToc2><a href="#_Toc121492010">Working with Zip Files<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></p>

<p class=MsoToc3><a href="#_Toc121492011">Overview<span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></p>

<p class=MsoToc3><a href="#_Toc121492012">addDirectory()<span style='color:
windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></p>

<p class=MsoToc3><a href="#_Toc121492013">addFile()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>12</span></a></p>

<p class=MsoToc3><a href="#_Toc121492014">deleteDirectory()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>13</span></a></p>

<p class=MsoToc3><a href="#_Toc121492015">deleteFile()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>13</span></a></p>

<p class=MsoToc3><a href="#_Toc121492016">entryExists()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>14</span></a></p>

<p class=MsoToc3><a href="#_Toc121492017">extractAll()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></p>

<p class=MsoToc3><a href="#_Toc121492018">extractDirectory()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></p>

<p class=MsoToc3><a href="#_Toc121492019">extractFile()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></p>

<p class=MsoToc3><a href="#_Toc121492020">getCompression()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></p>

<p class=MsoToc3><a href="#_Toc121492021">getVersion()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></p>

<p class=MsoToc3><a href="#_Toc121492022">init()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></p>

<p class=MsoToc3><a href="#_Toc121492023">isDirectory()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>18</span></a></p>

<p class=MsoToc3><a href="#_Toc121492024">isFile()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>19</span></a></p>

<p class=MsoToc3><a href="#_Toc121492025">list()<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>19</span></a></p>

<p class=MsoToc3><a href="#_Toc121492026">readAsBinaryFile()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></p>

<p class=MsoToc3><a href="#_Toc121492027">readAsTextFile()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></p>

<p class=MsoToc3><a href="#_Toc121492028">setCompression()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></p>

<p class=MsoToc3><a href="#_Toc121492029">writeAsBinaryFile()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>22</span></a></p>

<p class=MsoToc3><a href="#_Toc121492030">writeAsTextFile()<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>23</span></a></p>

<p class=MsoNormal>&nbsp;</p>

<b><span style='font-size:18.0pt;font-family:Arial'><br clear=all
style='page-break-before:always'>
</span></b>

<h1><a name="_Toc121491974">Introduction</a></h1>

<p class=MsoNormal>Welcome to the Alagad Zip Component documentation.  This
documentation is intended to help you integrate the Alagad Zip Component into
your ColdFusion application.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The Alagad Zip Component is a 100% native ColdFusion
component (CFC) for manipulating zip files.  This component requires no third
party software to operate and no additional configuration.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This documentation is specific to the Alagad Zip Component. 
Throughout the rest of the document the Alagad Zip Component will simply be
referred to as the Zip Component.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This documentation assumes that you have some experience
with ColdFusion and CFCs.</p>

<h2><a name="_Toc121491975"></a><a name="_Toc73922317"></a><a
name="_Toc73777293"></a><a name="_Toc73592503"></a><a name="_Toc73229330"></a><a
name="_Toc72854010">Conventions Used In This Document:</a></h2>

<p class=MsoNormal>Words surrounded in angle brackets indicate ColdFusion or
HTML tags.  For example, &lt;cfset&gt; indicates the ColdFusion cfset tag.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Words highlighted in blue followed by parenthesis indicate
Alagad Zip Component methods.  For example <span class=ParameterNames>drawRectangle()</span>
indicates the drawRectangle method.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>ColdFusion and HTML code is highlighted in brown.  For
example: </p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
example=&quot;Hello World&quot; /&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&nbsp;</span></span></p>

<p class=MsoNormal>Paths to files or directories are surrounded in quotation
marks.  For example “/MyDirectory/”.</p>

<p class=MsoNormal><span class=ParameterNames>&nbsp;</span></p>

<p class=MsoNormal>The “¬” character at the end of a line of example code indicates
a line which should be continued on the same line, even though it’s shown as
wrapping.</p>

<h1><a name="_Toc121491976"></a><a name="_Toc73922318"></a><a
name="_Toc73777294"></a><a name="_Toc73592504"></a><a name="_Toc73229331"></a><a
name="_Toc72854011"></a><a name="_Toc72853601"></a><a name="About_WysiPad_2"></a>About
the Alagad Zip Component</h1>

<p class=MsoNormal><a name="_Toc73922319"></a><a name="_Toc73777295"></a><a
name="_Toc73592505"></a><a name="_Toc73229332"></a><a name="_Toc72854013"></a><a
name="_Toc72853603"></a><a name="WysiPad_2_Features"></a>The Alagad Zip
Component is a ColdFusion Component (CFC) used to create and manipulate zip
files. Written entirely in ColdFusion CFML, the Zip Component does not require
installation of any additional software.  The Zip Component is not a CFX tag
and is not Platform dependant. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Because the Zip Component is written in pure ColdFusion and
instantiates only native Java objects, it compiles with the rest of your CFML
files to Java bytecode and is extremely portable.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Using the Zip Component you can perform a wide range of
actions on zip files, including:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>List all files in zip files</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Add files and directories to zip files</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Extract files and directories from zip files</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Delete files and directories from zip files</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Read data directly from zip files into variables</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Write data directly into zip files from variables</p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Control zip file compression</p>

<p class=MsoNormal style='margin-left:.5in'>&nbsp;</p>

<p class=MsoNormal>The Alagad Zip Component requires almost no effort to install
and use.  Simply place the component into your custom tags directory or any
directory in your site and then instantiate it using the ColdFusion
CreateObject method.  Once you have the Zip Component instantiated you can use
its methods to begin creating and manipulating zip files. </p>

<h2><a name="_Toc121491977">Requirements to Use the Zip Component</a></h2>

<p class=MsoNormal>The Alagad Zip Component works with ColdFusion MX 6.1 and
later on any supported platform.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>ColdFusion MX 6.1 users will not need to do any additional
configuration for the Alagad Zip Component to work.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Users who are running ColdFusion MX without the 6.1 update
will need to install the 6.1 update which is freely available on
macromedia.com. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The Zip Component also works BlueDragon 6.1 and later
servers, except for the free versions which do not allow usage of precompiled
code.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you are using the Zip Component on a platform which is
not supported by ColdFusion MX 6.1, such as OS X, you need to use a 1.4.1 or
later JRE.</p>

<h1><a name="_Toc121491978">Limitations of the Zip Component</a></h1>

<p class=MsoNormal>Because the Zip Component is built on top of functionality
provided by the Java Platform, the Zip Component is limited by the capabilities
provided by Java.  In particular, you should be aware of two notable
limitations when designing your application.  </p>

<h2><a name="_Toc121491979">Password Protected Zip Files</a></h2>

<p class=MsoNormal>Java does not provide any mechanism for reading password
protected zip files.  As a result, the Alagad Zip Component does not support
reading or writing password protected Zip files.  You will receive error
messages if you try to read password protected zip files.</p>

<h2><a name="_Toc121491980">Not That Fast…</a></h2>

<p class=MsoNormal>Another important fact you should keep in mind is that working
zip files can be expensive in terms of CPU usage, memory usage and the amount
of time operations take to complete.  This fact becomes more apparent when
working with large files. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>In many cases it may be a good idea to try to work with zip asynchronously
or though a scheduled processes.  You should consider this when designing your
application.</p>

<h1><a name="_Toc121491981">Using the Zip Component on Shared Hosting</a></h1>

<p class=MsoNormal>The Alagad Zip Component will work in a shared hosting
environment.  However, many hosting providers use “Sandbox” security to disable
certain functionality on the server.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For the Alagad Zip Component to function, your hosting
provider may need to enable the CreateObject() function and the &lt;cffile&gt;
tag.  Contact your hosting provider for more information.</p>

<h1><a name="_Toc73922320"></a><a name="_Toc73777296"></a><a name="_Toc73592506"></a><a
name="_Toc73229333"></a><a name="_Toc72854014"></a><a name="_Toc72853604"></a><a
name="_Toc121491982"></a><a name="_Updating_your_JRE"></a>Installation of the
Zip Component</h1>

<p class=MsoNormal>Installation of the Alagad Zip Component is quite simple. 
First, download the Alagad Zip Component in zip format from <a
href="tp://www.alagad.com/">http://www.alagad.com</a>.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you are using ColdFusion server you will want to extract
the zip.cfc file from “ColdFusion MX 6.1 and later Version” folder.  If you are
using BlueDragon you will want to extract the zip.cfc file from the “BlueDragon
JX 6.2 Version” folder.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you want to use the Zip Component from any website on
your server you can place the zip.cfc file in any custom tags folder.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you want to use the Zip Component in only one website,
copy the zip.cfc file into the website’s root or any directory under your web
site’s root.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you want to place the Zip Component outside of your web
site directory hierarchy and out side of <a name="_Toc72854015"></a><a
name="_Toc72853605">any of custom tags folder, then simple copy the zip.cfc
file anywhere you want on your file system and create a mapping to that
directory using the ColdFusion administration interface.  For more information
see the ColdFusion documentation.</a></p>

<h1><a name="_Toc121491983"></a><a name="_Image_Component_Licensing_and Licen"></a>Zip
Component Licensing and License Keys</h1>

<p class=MsoNormal>The Alagad Zip Component is not free or open source
software.  The Zip Component is licensed on a per-server basis.  Alagad
provides several programs for licensing the Zip Component.  For more
information on licensing options visit <a href="tp://www.alagad.com/">http://www.alagad.com</a>.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The Zip Component is protected via a “crippling” system. 
The download available from Alagad.com is the full version of the Zip
Component.  However, if you run the Zip Component without providing a license
key or with an invalid license key the Zip Component will enter a trial mode.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>When in trial mode you can only execute one method other
than the <span class=ParameterNames>init()</span>, <span class=ParameterNames>getCompression()</span>,<span
class=ParameterNames> setCompression()</span>,<span class=ParameterNames>
entryExists()</span>,<span class=ParameterNames> isDirectory()</span> and <span
class=ParameterNames>isFile()</span> methods.  Execution any additional methods
will produce the following error message:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-left:.5in'>“Thank you for trying out the
Alagad Zip Component.  You have not provided a valid license key so this
component is running in trial mode.  In trial mode you can only execute one
method other than the init(), getCompression(), setCompression(),
entryExists(), isDirectory() and isFile() methods.  By providing a license key
you can remove this limitation.”</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><a name="_Toc73922323"></a><a name="_Toc73777299"></a><a
name="_Toc73592507"></a><a name="_Toc73229334"></a><a name="_Toc72854018"></a><a
name="_Toc72853608">To remove this limitation you can purchase a license key
from Alagad at </a><a href="tp://www.alagad.com/">http://www.alagad.com</a>.  A
key will be immediately emailed to you.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For information on using your license key see<a
href="#_Instantiating_the_Image_Component W"><span style='color:windowtext;
text-decoration:none'> </span>Instantiating the Zip Component With Your License
Key</a></p>

<h1><a name="_Toc121491984">Instantiating the Zip Component</a></h1>

<p class=MsoNormal>You must instantiate the Zip Component before you can call
its methods.  When instantiating the Zip Component you must also call it’s <span
class=ParameterNames>init()</span> method and pass in the path to the zip file
you will be working with.  This file will be created if it does not already
exist.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The following examples demonstrate instantiating the Zip
Component using the ColdFusion &lt;cfobject&gt; tag and CreateObject()
function.  In each example the Zip Component is configured to use a file named
“myZipFile.zip” which is in the same directory as the script instantiating the
Zip Component.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The expandPath() function is provided by ColdFusion and
translates a relative path to an absolute path.  For more information see the
ColdFusion documentation.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For more information on using ColdFusion components see the Using
ColdFusion components section of the ColdFusion documentation.</p>

<h2><a name="_Toc121491985"></a><a name="_Toc73922324"></a><a
name="_Toc73777300"></a><a name="_Toc73592508"></a><a name="_Toc73229335">Instantiation
from a Local Directory</a></h2>

<p class=MsoNormal>If you installed the Zip Component in a directory under your
web site’s root you would instantiate it as follows below.  In both cases we
are assuming the zip.cfc file was placed in a directory “/path/to/” under your
web site’s root.  We are creating an instance of the zip.cfc named myZip.</p>

<h3><a name="_Toc121491986"></a><a name="_Toc73922325"></a><a
name="_Toc73777301"></a><a name="_Toc73592509"></a><a name="_Toc73229336">Using
&lt;cfobject&gt;:</a></h3>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfobject
component=&quot;path.to.Zip&quot; name=&quot;myZip&quot; /&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip.init(expandPath(&quot;myZipFile.zip&quot;)) /&gt;</span></span></p>

<h3><a name="_Toc121491987"></a><a name="_Toc73922326"></a><a
name="_Toc73777302"></a><a name="_Toc73592510"></a><a name="_Toc73229337">Using
CreateObject():</a></h3>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&nbsp;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip = CreateObject(&quot;Component&quot;, ¬ &quot;path.to.Zip&quot;)<a
name="_Toc72854016"></a><a name="_Toc72853606">.init(expandPath(&quot;myZipFile.zip&quot;)))
/&gt;</a></span></span></p>

<h2><a name="_Toc121491988"></a><a name="_Toc73922327"></a><a
name="_Toc73777303"></a><a name="_Toc73592511"></a><a name="_Toc73229338">Instantiation
from a Mapped Directory</a></h2>

<p class=MsoNormal>If you installed the Zip Component in a ColdFusion mapped
directory you would instantiate it as follows below.  In both cases we are
assuming the zip.cfc file was placed in a directory which was mapped to with
the logical path “/mapped/path/to/”.  We are creating an instance of the zip.cfc
named myZip.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For more information on ColdFusion mappings see the
ColdFusion documentation.</p>

<h3><a name="_Toc121491989"></a><a name="_Toc73922328"></a><a
name="_Toc73777304"></a><a name="_Toc73592512"></a><a name="_Toc73229339">Using
&lt;cfobject&gt;:</a></h3>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfobject
component=&quot;mapped.path.to.Zip&quot; name=&quot;myZip&quot; /&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip.init(expandPath(&quot;myZipFile.zip&quot;)) /&gt;</span></span></p>

<h3><a name="_Toc121491990"></a><a name="_Toc73922329"></a><a
name="_Toc73777305"></a><a name="_Toc73592513"></a><a name="_Toc73229340">Using
CreateObject():</a></h3>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&nbsp;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip = CreateObject(&quot;Component&quot;, ¬ &quot;mapped.path.to.Zip&quot;).init(expandPath(&quot;myZipFile.zip&quot;))
/&gt;</span></span></p>

<h2><a name="_Toc121491991"></a><a name="_Toc73922330"></a><a
name="_Toc73777306"></a><a name="_Toc73592514"></a><a name="_Toc73229341"></a><a
name="_Toc72854017"></a><a name="_Toc72853607">Instantiation from a Custom Tag
Path</a></h2>

<p class=MsoNormal>If you installed the Zip Component in a ColdFusion custom
tags path you would instantiate it as follows below.  In both cases we are
creating an instance of the zip.cfc named myZip.</p>

<h3><a name="_Toc121491992"></a><a name="_Toc73922331"></a><a
name="_Toc73777307"></a><a name="_Toc73592515"></a><a name="_Toc73229342">Using
&lt;cfobject&gt;:</a></h3>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfobject
component=&quot;Zip&quot; name=&quot;myZip&quot; /&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip.init(expandPath(&quot;myZipFile.zip&quot;)) /&gt;</span></span></p>

<h3><a name="_Toc121491993"></a><a name="_Toc73922332"></a><a
name="_Toc73777308"></a><a name="_Toc73592516"></a><a name="_Toc73229343">Using
CreateObject():</a></h3>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&nbsp;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip = CreateObject(&quot;Component&quot;, ¬ &quot;Zip&quot;)&quot;).init(expandPath(&quot;myZipFile.zip&quot;))
/&gt;</span></span></p>

<h1><a name="_Toc72854019"></a><a name="_Toc72853609"></a><a name="_Toc73922333"></a><a
name="_Toc73777309"></a><a name="_Toc73592517"></a><a name="_Toc73229344"></a><a
name="_Toc121491994"></a><a name="_Instantiating_the_Image_Component W"></a>Instantiating
the Zip Component with Your License Key</h1>

<p class=MsoNormal>Shortly after purchasing the Alagad Zip Component you will
receive an email which contains a license key.  License keys are 29 character
strings in the following format:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>            XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The license key can be used in two ways.  The most common
way is to pass the license key string into the <span class=ParameterNames>init()</span>
method’s second argument.  This needs to be done when instantiating the Zip
Component.  See the <a href="#_Example_1">Example</a> below.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>You can also create a file named zipkey.txt in the same
directory as your zip.cfc file.  The key string should be placed in the zipkey.txt
file and should be the only content of the file.  When the Zip Component is
executed the zipkey.txt file will be read (if it exists) and the key will be
set automatically. </p>

<h2><a name="_Toc121491995"></a><a name="_Example_1"></a>Example</h2>

<p class=MsoNormal>The following code demonstrates two techniques for invoking
the Zip Component and passing the license key into the init() method.</p>

<h3><a name="_Toc121491996">Using &lt;cfobject&gt;:</a></h3>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfobject
component=&quot;path.to.Zip&quot; name=&quot;myZip&quot; /&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip.init(expandPath(&quot;myZipFile.zip&quot;), ¬ </span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&quot;XXXXX-XXXXX-XXXXX-XXXXX-XXXXX&quot;)
/&gt;</span></span></p>

<h3><a name="_Toc121491997">Using CreateObject():</a></h3>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&nbsp;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip = CreateObject(&quot;Component&quot;, ¬ &quot;path.to.Zip&quot;).init(expandPath(&quot;myZipFile.zip&quot;),
¬</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&quot;XXXXX-XXXXX-XXXXX-XXXXX-XXXXX&quot;)
/&gt;</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If a valid license key is passed into the <span
class=ParameterNames>init()</span> method, the Zip Component will not limit the
number of methods you can call as described in <a
href="#_Image_Component_Licensing_and Licen">Zip Component Licensing and
License Keys</a>.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If an invalid license key is passed into the <span
class=ParameterNames>init()</span> method, or is not passed at all, the Zip
Component will limit the number of methods you can call as described in <a
href="#_Image_Component_Licensing_and Licen">Zip Component Licensing and
License Keys</a>.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>All of the examples in this document were written to use the
zipkey.txt method and do not show license keys being passed into the init
method.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Additional information can be found in the <a
href="#_setKey()">init() documentation section</a>.</p>

<h1><a name="_Toc121491998">Using the Instantiated Zip Component</a></h1>

<p class=MsoNormal>Once you have instantiated the Zip Component you can call
methods on the component to perform Zip related actions such as adding files to
and extracting files from zip files.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Below are some complete examples of the most common actions. 
These examples use the CreateObject() to instantiate the object, but the same
process works equally well with &lt;cfobject&gt;.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>These examples are also provided in the zip file downloaded
from Alagad.com.  Look in the examples folder. </p>

<h2><a name="_Toc121491999"></a><a name="_Toc73922334"></a><a
name="_Toc73777310"></a><a name="_Toc73592518"></a><a name="_Toc73229345">Creating
a New Zip </a>and Adding a File</h2>

<p class=MsoNormal>The following example demonstrates how to create a new zip
file.  Compression settings are also shown.</p>

<h3><a name="_Toc121492000"></a><a name="_Toc73922335"></a><a
name="_Toc73777311"></a><a name="_Toc73592519"></a><a name="_Toc73229346">Source
Code</a></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  By specifying a zip
file name which doesn't exist you will create a new zip file. </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- add a file into the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.addFile(expandPath(&quot;bagOfBugers.JPG&quot;))
/&gt;</span></p>

<h2><a name="_Toc121492001"></a><a name="_Creating_and_Drawing_Into a New Ima"></a>Add
a Directory to an existing Zip</h2>

<p class=MsoNormal>The following source code demonstrates how to add an entire
folder to an existing zip file.</p>

<h3><a name="_Toc121492002"></a><a name="_Toc73922338"></a><a
name="_Toc73777314"></a><a name="_Toc73592522"></a><a name="_Toc73229349">Source
Code</a></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  The Zip Component
will work with the specified zip file.  </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- add an entire directory into the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.addDirectory(expandPath(&quot;photos&quot;)) /&gt;</span></p>

<h2><a name="_Toc121492003">Extracting a File from a Zip</a></h2>

<p class=MsoNormal>The following source code demonstrates how to extract a file
from a zip document.</p>

<h3><a name="_Toc121492004"></a><a name="_Toc73922341"></a><a
name="_Toc73777317"></a><a name="_Toc73592525"></a><a name="_Toc73229352">Source
Code</a></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  The Zip Component
will work with the specified zip file.  </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- extract a file from the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.extractFile(&quot;bagOfBugers.jpg&quot;,
expandPath(&quot;.&quot;)) /&gt;</span></p>

<h2><a name="_Toc121492005">Read and Write data directly to a Zip</a>   </h2>

<p class=MsoNormal>The following source code demonstrates how you can write
directly into a zip file and read that data directly out.</p>

<h3><a name="_Toc121492006"></a><a name="_Toc73922344"></a><a
name="_Toc73777320"></a><a name="_Toc73592528"></a><a name="_Toc73229355">Source
Code</a></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  By specifying a zip
file</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>name which doesn't exist you will create a new zip file. </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- you can write data directly int a zip file using the
writeAsTextFile method ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.writeAsTextFile(&quot;example file.txt&quot;,
&quot;This is some sample text.&quot;) /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- read the text back out of the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset text = myZip.readAsTextFile(&quot;example
file.txt&quot;) /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- output the text from the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfoutput&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      #text#</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;/cfoutput&gt;</span></p>

<h1><a name="_Toc73922353"></a><a name="_Toc73777326"></a><a name="_Toc73592534"></a><a
name="_Toc73229361"></a><a name="_Toc121492007">Working With Zip Entry Paths</a></h1>

<p class=MsoNormal>Most methods in the zip component work with paths to
“entries” in the zip document.  Entries are any file or location in the zip
document.  Entries are specified in a format similar to relative URLs or
paths.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Folders can be specified using either a front slash or back
slash.   Any path ending in a front slash or back is assumed to be a folder. 
The lack of a trailing slash may or may not indicate that the path is a file,
depending on context.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Though out the zip component, efforts have been made to make
zip entry paths as intuitive as possible.  If it seems like a particular use of
a zip entry path <i>should</i> work then it probably will.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>So, for example, if you wanted to specify a file named
“temp.txt” in a directory named “example” in your zip file, all of the
following formats would be legal:</p>

<p class=MsoNormal>&nbsp;</p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal>example/temp.txt</li>
 <li class=MsoNormal>/example/temp.txt</li>
 <li class=MsoNormal>example\temp.txt</li>
 <li class=MsoNormal>\example\temp.txt</li>
</ul>

<h1><a name="_Toc121492008">Working With File System Paths</a></h1>

<p class=MsoNormal>In the same way that zip entry paths are supposed to behave
intuitively, so should file system paths.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>As an example of how the behavior should be intuitive, let’s
consider the <span class=ParameterNames>extractFile()</span> method.  According
to the <span class=ParameterNames>extractFile()</span>’s <a
href="#_extractFile()">documentation</a> the method accepts two required
arguments, pathToZipEntry and extractToPath.  Depending on how you use the
method, the exact meaning of the extractTo varies. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Consider the following examples.  These assume you have
instantiated the zip component into a variable named myZip.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><i>Note: The expandPath() method is a ColdFusion function
which translates relative paths into absolute paths.  So, if your script was
executing in “c:\inetpub”, expandPath(“.”) would translate to “c:\inetpub\.</i></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.extractFile(&quot;/example/file.txt&quot;,
extractPath(&quot;.&quot;)) /&gt;</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This usage causes the file to be extracted to
“c:\inetpub\example\file.txt”.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.extractFile(&quot;/example/file.txt&quot;,
extractPath(&quot;example&quot;))/&gt;</span></p>

<p class=MsoNormal style='margin-right:-9.0pt'>&nbsp;</p>

<p class=MsoNormal style='margin-right:-9.0pt'>This usage causes the file to be
extracted to “c:\inetpub\example\example\file.txt”.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-right:-9.0pt'><span style='font-size:10.0pt;
font-family:"Courier New";color:olive'>&lt;cfset myZip.extractFile(&quot;/example/file.txt&quot;,
extractPath(&quot;file.txt&quot;))/&gt;</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This usage causes the file to be extracted to
“c:\inetpub\file.txt“.</p>

<h1><a name="_Toc121492009">Zip Component </a><a name="_Toc72854020"></a><a
name="_Toc72853610">Methods</a></h1>

<p class=MsoNormal>The Alagad Zip Component has several methods that you can
use for reading, creating, and manipulating Zip files.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The following is a list of all public Zip Component
methods.  </p>

<h2><a name="_Toc121492010"></a><a name="_Toc73922354"></a><a
name="_Toc73777327"></a><a name="_Toc73592535"></a><a name="_Toc73229362"></a><a
name="_Toc72854021"></a><a name="_Toc72853611"></a><a
name="_Working_with_Zip_Files"></a>Working with Zip Files</h2>

<h3><a name="_Toc121492011"></a><a name="_Toc73922355"></a><a
name="_Toc73777328"></a><a name="_Toc73592536">Overview</a></h3>

<p class=MsoNormal>The Zip Component is designed to work with and manipulate
one zip file at a time.  When you initialize the zip component you will read an
existing zip file or create a new zip file.  The zip file data and component’s current
state is stored in instance variables within the Zip Component.  As you call
various methods on the Component you are manipulating the state of the Zip and
the Zip data.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>All operations on the zip file occur at the time the
operation is executed.  For example, if you use the <span class=ParameterNames>deleteFile()</span>
method to delete a file from the zip document it will immediately be deleted.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you need to manipulate more than one Zip at the same
time, then use multiple instances of the Zip Component.  Each instance operates
separately. </p>

<h3><a name="_Toc73922356"></a><a name="_Toc73777329"></a><a name="_Toc73592537"></a><a
name="_Toc73229363"></a><a name="_Toc72854022"></a><a name="_Toc72853612"></a><a
name="_Toc121492012"></a><a name="_createImage()"></a><a name="_addDirectory()"></a>addDirectory()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>addDirectory()</span> method
adds a directory to the zip document.  The optional pathToZippedDirectory argument
specifies the location where the entry should be added in the zip file.  If
this argument is not provided the directory is added under the zip file’s root
directory.  By default the directory is added recursively, however this can be
disabled by setting the recursive argument to false.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For information on controlling compression settings see the <a
href="#_setCompression()">setCompression()</a> method documentation.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If, in the <span class=ParameterNames>init()</span> method,
you do not specify an existing zip file this method will create a new zip file.</p>

<h4>Syntax</h4>

<p class=MsoNormal>addDirectory(pathToDirectory, pathToZippedDirectory, recursive)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToDirectory</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the folder to add to the zip file.  </p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZippedDirectory</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>No</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This indicates where the directory will be placed inside
  the zip document.  If not provided, this defaults to the root directory, or
  “/”.</p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>recursive</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>No</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Boolean</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Indicates if the directory is added recursively.  Options
  are:</p>
  <p class=MsoNormal>True – (default) All files and directories under the
  specified directory are added to the zip file.</p>
  <p class=MsoNormal>False – Only files directly under the specified directory
  are added.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- add a directory to the root of the zip document ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.addDirectory(expandPath(&quot;example &quot;)/&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_addFile()">addFile()</a>, <a
href="#_deleteDirectory()">deleteDirectory()</a>, <a href="#_setCompression()">setCompression()</a></p>

<h3><a name="_Toc121492013"></a><a name="_addFile()"></a>addFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>addFile()</span> method adds
a file to the zip document.  The pathToZipEntry argument specifies the location
where the entry should be added in the zip file.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For information on controlling compression settings see the <a
href="#_setCompression()">setCompression()</a> method documentation.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If, in the <span class=ParameterNames>init()</span> method,
you do not specify an existing zip file this method will create a new zip file.</p>

<h4>Syntax</h4>

<p class=MsoNormal>addFile(pathToFile, pathToZipEntry) </p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToFile</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the file to add to the zip file.  </p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Indicates the directory or file in the zip file where the
  file should be placed.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- add a file to the zip document ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.addFile(expandPath(&quot;example.txt&quot;),
&quot;example.txt&quot;) /&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_addDirectory()">addDirectory()</a>, <a
href="#_addFile()">deleteFile()</a>, <a href="#_setCompression()">setCompression()</a></p>

<h3><a name="_Toc121492014"></a><a name="_deleteDirectory()"></a>deleteDirectory()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>deleteDirectory()</span>
method is used to delete an entire directory and all of it’s contents from a
zip file.  This method executes recursively. </p>

<h4>Syntax</h4>

<p class=MsoNormal>deleteDirectory(pathToZippedDirectory) </p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZippedDirectory</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This specifies the directory to delete from the zipFile  </p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- delete a directory from the zip document ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.deleteDirectory(&quot;example.txt&quot;) /&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_deleteFile()">deleteFile()</a></p>

<h3><a name="_Toc121492015"></a><a name="_deleteFile()"></a>deleteFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>deleteFile()</span> method is
used to delete a file from a zip document.  The pathToZipEntry argument
specifies the particular file to delete.</p>

<h4>Syntax</h4>

<p class=MsoNormal>deleteFile(pathToZipEntry) </p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This specifies the file to delete from the zipFile  </p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- delete a file from the zip document ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.deleteFile(&quot;example.txt&quot;) /&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_addFile()">addFile()</a>, <a
href="#_deleteDirectory()">deleteDirectory()</a></p>

<h3><a name="_Toc121492016"></a><a name="_entryExists()"></a>entryExists()</h3>

<h4>Description</h4>

<p class=MsoNormal>This method is used to check if an entry with a specific
name exists.  If the entry exists this method returns true, otherwise it
returns false.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Boolean = entryExists(pathToZipEntry) </p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This specifies the entry in the zip file to check if it
  exists.  </p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- check if an entry exists ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfif myZip.entryExists(&quot;example.txt&quot;)&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      The entry exists!</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfelse&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      The entry does not exist!</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;/cfif&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_isFile()">isFile()</a>, <a href="#_isDirectory()">isDirectory()</a></p>

<h3><a name="_Toc121492017"></a><a name="_extractAll()"></a>extractAll()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>extractAll()</span> method
extracts all files from the zip file and places them in the specified
directory.  All files are extracted recursively.</p>

<h4>Syntax</h4>

<p class=MsoNormal>extractAll(extractToDirectory)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>extractToDirectory</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This specified the directory to extract files into.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>      </span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;!---
extract all files recursively into the temp directory ---&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip.extractAll(&quot;c:\temp&quot;) /&gt;</span></span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_extractDirectory()">extractDirectory()</a>, <a
href="#_extractFile()">extractFile()</a></p>

<h3><a name="_Toc121492018"></a><a name="_extractDirectory()"></a>extractDirectory()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>extractDirectory()</span>
method is used to extract a directory from a zip file to a specified location. 
By default this method will extract files and directories under the specified
directory recursively.</p>

<p class=MsoNormal>                                 </p>

<p class=MsoNormal>In other words, if you have a directory in your zip file
such as, “directory” and you extract it to “c:\temp”, the zip component will
extract all of the files and directories under “directory” to the “c:\temp”
folder.  This includes “directory/example” and “directory/example/file.txt”.  
However, if you set the recursive argument to false only the files directly
under “directory” will be extracted into “c:\temp”.</p>

<h4>Syntax</h4>

<p class=MsoNormal>extractDirectory(pathToZippedDirectory, extractToDirectory, recursive)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZippedDirectory</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This specifies the directory in the zip file to extract.  </p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>extractToDirectory</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the location where the files in the specified
  directory will be extracted. </p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>recursive</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>No</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Boolean</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Indicates if files are extracted recursively.</p>
  <p class=MsoNormal>True – (default) The all files and directories are
  extracted from the specified folder.</p>
  <p class=MsoNormal>False – Only files directly under the specified folder are
  extracted.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>      </span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;!---
extract a directory recursively ---&gt;</span></span></p>

<p class=MsoNormal><span class=HTMLCode-NoIndent><span style='font-size:10.0pt'>&lt;cfset
myZip.extractDirectory(&quot;temp&quot;, &quot;c:\temp&quot;) /&gt;</span></span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_extractDirectory()">addDirectory()</a>, <a
href="#_extractFile()">extractFile()</a>, <a href="#_extractAll()">extractAll()</a></p>

<h3><a name="_Toc121492019"></a><a name="_extractFile()"></a>extractFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>extractFile()</span> method
is used to extract a file from a zip file to a specified location.  By default
this method will maintain the directory hierarchy defined in the zip document. 
</p>

<p class=MsoNormal>                                 </p>

<p class=MsoNormal>In other words, if you have a zip entry such as,
“directory/file.txt” and you extract it to “c:\temp”, the zip component will
extract this file to “c:\temp\directory\file.txt.”  However, if you set the
preserveDirectories argument to false, or if you specify a particular file in
the extractToPath argument, the directory structure will be disregarded and
your file will be extracted to “c:\temp\file.txt.”</p>

<h4>Syntax</h4>

<p class=MsoNormal>extractFile(pathToZipFile, key)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This specifies the entry in the zip file to extract.  </p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>extractToPath</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the location where the file will be extracted. </p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>preserveDirectories</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>No</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Boolean</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Indicates if the directory structure in the zip file is
  maintained when the zipped file is extracted.</p>
  <p class=MsoNormal>True – (default) The directory structure is maintained.</p>
  <p class=MsoNormal>False – The file is written directly into the directory
  specified.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- extract a file from the zip document ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.extractFile(&quot;example.txt&quot;,
expandPath(&quot;.&quot;)) /&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_addFile()">addFile()</a>, <a
href="#_extractDirectory()">extractDirectory()</a>, <a href="#_extractAll()">extractAll()</a></p>

<h3><a name="_Toc121492020"></a><a name="_getCompression()"></a>getCompression()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>getCompression()</span>
method returns the current compression level setting for the zip component. 
This is not the compression setting for any particular file, but the setting
which will be used when the next file is added to the zip component.  </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For more information on the compression level settings see
the <span class=ParameterNames>setCompression()</span> documentation.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Compression = getCompression()</p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_setCompression()">setCompression()</a></p>

<h3><a name="_Toc121492021">getVersion()</a></h3>

<h4>Description</h4>

<p class=MsoNormal>This method returns the version of the zip component as a
string.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Version = getVersion()</p>

<h3><a name="_Toc121492022">init()</a></h3>

<h4>Description</h4>

<p class=MsoNormal>The init() method is used to configure the zip component. 
As explained in the section entitled “<a href="#_Working_with_Zip_Files">Working
with Zip Files</a>”, the zip component works with only one zip file at a time. 
The init method is used configure the file that the zip component instance is
working with.  If the file specified doesn’t exist, it is created.  If the file
does exist it is used.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Additionally, if you have a license key you can provide it
to the second, optional, argument to unlock the zip component.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This method must be called when the component is instantiated. 
In the case when you are using the &lt;cfobject&gt; syntax you will need to
call this method immediately after instantiating the component.  If you are
using the createObject() method you can either call this method immediately
after instantiating the component or you can chain it onto the createObject()
call.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If you do not pass a license key the zip component will
allow you to call only one method.  If you call more than one method the zip
component will throw an error explaining that the component is unlicensed. 
Exceptions to this rule are the following methods which do not have this
restriction:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>init()</p>

<p class=MsoNormal>getCompression()</p>

<p class=MsoNormal>setCompression()</p>

<p class=MsoNormal>entryExists()</p>

<p class=MsoNormal>isDirectory()</p>

<p class=MsoNormal>isFile()</p>

<h4>Syntax</h4>

<p class=MsoNormal>Zip = init(pathToZipFile, key)</p>

<h4>Example</h4>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipFile</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the zip file that the component will
  use.  If you specify a file which does not exist it will be created.</p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Key</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>No</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is your license key.  If you do not provide this
  argument the component will be in demo mode and will be restricted. </p>
  </td>
 </tr>
</table>

<h3><a name="_Toc121492023"></a><a name="_isDirectory()"></a>isDirectory()</h3>

<h4>Description</h4>

<p class=MsoNormal>This method indicates if a particular entry in the zip file
is a directory or not.  If the entry does not exist an error is thrown.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Boolean = isDirectory(pathToZipEntry)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the entry in the zip file to check if
  it is a directory. </p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- check if an entry is a file or not ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfif myZip.isDirectory(&quot;example &quot;)&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      The entry is a directory!</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfelse&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      The entry is not a directory!</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;/cfif&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_isFile()">isFile()</a>, <a href="#_entryExists()">entryExists()</a></p>

<h3><a name="_Toc121492024"></a><a name="_isFile()"></a>isFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>This method indicates if a particular entry in the zip file
is a file or not.  If the entry does not exist an error is thrown.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Boolean = isFile(pathToZipEntry)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the entry in the zip file to check if
  it is a file. </p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- check if an entry is a file or not ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfif myZip.isFile(&quot;example.txt&quot;)&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      The entry is a file!</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfelse&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      The entry is not a file!</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;/cfif&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_isDirectory()">isDirectory()</a>, <a
href="#_entryExists()">entryExists()</a></p>

<h3><a name="_Toc121492025">list()</a></h3>

<h4>Description</h4>

<p class=MsoNormal>The list method returns a query which describes the contents
of a zip file.  The query is made up of the following columns:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>Directory</b></p>

<p class=MsoNormal>This is the directory an entry is under in the zip file.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>File</b></p>

<p class=MsoNormal>This is the file name for the entry. <br>
<br>
</p>

<p class=MsoNormal><b>FullPath</b></p>

<p class=MsoNormal>This is the full path to a file in the zip file.  This is
the same as if you were to concatenate the File column onto the Directory
column.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>CompressedSize</b></p>

<p class=MsoNormal>This is the size of the file after compression.</p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>UncompressedSize </b></p>

<p class=MsoNormal>This is the size of the file when uncompressed.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>LastModified</b></p>

<p class=MsoNormal>This is the date the file in the zip document was last
modified.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Query = list()</p>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Read a zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- list the contents of the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset list = myZip.list() /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- dump all the resulting query ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfdump var=&quot;#list#&quot; /&gt;</span></p>

<h3><a name="_Toc121492026"></a><a name="_readAsBinaryFile()"></a>readAsBinaryFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>readAsBinaryFile()</span>
method can be used to read binary data out of any file in a zip file.  The data
is returned directly by the method.  This is useful in the case when you do not
necessarily want to extract a file to disk, but you do need to read the file.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Binary = readAsBinaryFile(pathToZipEntry)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the entry in the zip file that you
  want to read.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  This will read the
example.zip file. </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- read some text from an entry in the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset data = myZip.readAsTextFile(&quot;example.txt&quot;)
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- dump the data ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfdump var=&quot;#data#&quot; /&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_writeAsBinaryFile()">writeAsBinaryFile()</a></p>

<h3><a name="_Toc121492027"></a><a name="_readAsTextFile()"></a>readAsTextFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>readAsTextFile()</span>
method can be used to read textual data out of any file in a zip file.  The
data is returned directly by the method.  This is useful in the case when you
do not necessarily want to extract a file to disk, but you do need to read the
file.</p>

<h4>Syntax</h4>

<p class=MsoNormal>Text = readAsTextFile(pathToZipEntry)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZipEntry</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This is the path to the entry in the zip file that you
  want to read.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  This will read the
example.zip file. </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- read some text from an entry in the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset text = myZip.readAsTextFile(&quot;example.txt&quot;)
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- output the text ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfoutput&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      #text#</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;/cfoutput&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_writeAsTextFile()">writeAsTextFile()</a></p>

<h3><a name="_Toc121492028"></a><a name="_setCompression()"></a>setCompression()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>setCompression()</span>
method sets the compression levels for files added to the zip file.  Low values
indicate less compression.  High values indicate more compression.  The default
compression level is 6.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The results of using this method can be counter intuitive. 
For example imagine that you do the following steps:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in'>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Add a file
to a zip document using the default compression level of 6</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in'>2)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Change the
compression level using <span class=ParameterNames>setCompression()</span> to
9.</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in'>3)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Add
another file to the zip document.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>You might expect that the first file would still have a
compression level of 6.  This is <i>not</i> true.  Both files will now have a
compression level of 9.  The opposite is true too.  If the initial compression
level was 9, and the second file was added at 6 then both files will have a
compression level of 6</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This is due to how the Zip Component compensates for the
limitations inherent in Java.  Java does not have a robust set of classes for
working with Zip files.  As a result it’s not technically possible to simply
add a new file to a zip document.  The Zip Component works around this by
creating a new zip file each time you add a file to your zip file.  The new zip
file is created in a temp directory and all of the files in the first document
are copied into the new document and then the new file is added.  Once created,
the new zip file is moved to replace your old zip file.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The implication of this is that any time you change the
compression settings and then add a new file, the old entries in your zip file
will be recompressed using the new level as they are moved into the new zip
document.</p>

<h4>Syntax</h4>

<p class=MsoNormal>setCompression(compression)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Compression</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Numeric</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>This argument sets the compression level used when adding
  data to the zip file.  Valid options are 0 to 9.  0 is the lowest level of
  compression.  9 is the maximum amount of compression.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Create a new instance of the zip component.  By
specifying a zip file name which doesn't exist you will create a new zip file.
---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, ¬
&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;)) /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- set the compression level to maximum amount ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.setCompression(9) /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>                  </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- add a file to the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.addFile(expandPath(&quot;Documentation.doc”))
/&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_getCompression()">getCompression()</a></p>

<h3><a name="_Toc121492029"></a><a name="_writeAsBinaryFile()"></a>writeAsBinaryFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>writeAsBinaryFile()</span>
method is used to write binary data directly into a zip file.  This is useful
in cases where you have data which may exist in a variable or which may be
returned from a function call, but which does not exist as a file on disk. 
This data can easily be added to the zip file by using the <span
class=ParameterNames>writeAsBinaryFile()</span> method.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>By using this method you can avoid writing data to disk before
adding your binary data to the zip file.</p>

<h4>Syntax</h4>

<p class=MsoNormal>writeAsBinaryFile(pathToZippedFile, contents)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZippedFile</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The path to the entry in the zip file that the contents
  will be written to.  If the entry does not exist it will be created.  If it
  does exist it will be overwritten.</p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>contents</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Binary</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The binary contents to write to the file.  This must be a
  binary value.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- Create a new instance of the zip component.  By
specifying a zip file name which doesn't exist you will create a new zip file.
---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, ¬
&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;)) /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- create some binary data ---&gt;<br>
&lt;cfset binData = ToBinary(ToBase64(&quot;This is some sample data&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- write the binary data to the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.writeAsBinaryFile(&quot;data.bin&quot;, binData)
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- read the binary data and dump it out ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfdump var=&quot;#myZip.readAsBinaryFile(&quot;data.bin&quot;)#&quot;&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_readAsBinaryFile()">readAsBinaryFile()</a></p>

<h3><a name="_Toc121492030"></a><a name="_writeAsTextFile()"></a>writeAsTextFile()</h3>

<h4>Description</h4>

<p class=MsoNormal>The <span class=ParameterNames>writeAsTextFile()</span>
method is used to write directly into a zip file.  This is useful in cases
where you have data which may exist in a variable or which may be returned from
a function call, but which does not exist as a file on disk.  This data can
easily be added to the zip file by using the <span class=ParameterNames>writeAsTextFile()</span>
method.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>By using this method you can avoid writing data to disk
before adding your text data to the zip file. </p>

<h4>Syntax</h4>

<p class=MsoNormal>writeAsTextFile(pathToZippedFile, contents)</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Parameter</b></p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Required</b></p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Type</b></p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border:solid windowtext 1.0pt;
  border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b>Description</b></p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>pathToZippedFile</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The path to the entry in the zip file that the contents
  will be written to.  If the entry does not exist it will be created.  If it
  does exist it will be overwritten.</p>
  </td>
 </tr>
 <tr>
  <td width=139 valign=top style='width:104.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>contents</p>
  </td>
  <td width=84 valign=top style='width:62.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Yes</p>
  </td>
  <td width=74 valign=top style='width:55.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>String</p>
  </td>
  <td width=294 valign=top style='width:220.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The contents to write to the file.  This must be a string
  value.</p>
  </td>
 </tr>
</table>

<h4>Example</h4>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!---</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>Create a new instance of the zip component.  By specifying a zip
file</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>name which doesn't exist you will create a new zip file. </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip = CreateObject(&quot;Component&quot;, <span
class=HTMLCode-NoIndent>¬ </span>&quot;zip.zip&quot;).init(expandPath(&quot;example.zip&quot;))
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- You can write data directly in to a zip file using the
writeAsTextFile method ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset myZip.writeAsTextFile(&quot;example file.txt&quot;,
&quot;This is some sample <span class=HTMLCode-NoIndent>¬ </span> text.&quot;)
/&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- read the text back out of the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfset text = myZip.readAsTextFile(&quot;example
file.txt&quot;) /&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;!--- output the text from the zip file ---&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;cfoutput&gt;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>      #text#</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:olive'>&lt;/cfoutput&gt;</span></p>

<h4>See Also</h4>

<p class=MsoNormal><a href="#_readAsTextFile()">readAsTextFile()</a></p>

</div>

</body>

</html>
